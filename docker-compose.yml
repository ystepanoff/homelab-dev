services:
  dev-postgres:
    image: postgres:17
    container_name: dev-postgres
    networks: [ dev ]
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro

  hishtory:
    image: lscr.io/linuxserver/hishtory-server:latest
    container_name: hishtory
    networks: [ proxy, dev ]
    depends_on: [ dev-postgres ]
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${TZ}
      HISHTORY_POSTGRES_DB: postgres://${POSTGRES_USER}:${POSTGRESS_PASSWORD}@dev-postgres:5432/hishtory?sslmode=disable
    volumes:
      - ./hishtory:/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.hishtory.rule=Host(`hishtory.${DOMAIN}`)"
      - "traefik.http.routers.hishtory.entrypoints=websecure"
      - "traefik.http.routers.hishtory.tls.certresolver=letsencrypt"
      - "traefik.http.services.hishtory.loadbalancer.server.port=8080"
      - "com.centurylinklabs.watchtower.enable=true"

  code-server:
    image: linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - PASSWORD=${CODE_SERVER_PASSWORD}
      - DEFAULT_WORKSPACE=/workspace
    volumes:
      - ./code-server/config:/config
      - ./code-server/workspace:/workspace
    networks: [ proxy, dev ]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.code-server.rule=Host(`code.${DOMAIN}`)"
      - "traefik.http.routers.code-server.entrypoints=websecure"
      - "traefik.http.routers.code-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.code-server.loadbalancer.server.port=8443"
      - "com.centurylinklabs.watchtower.enable=true"

networks:
  proxy:
    external: true
  dev:
    driver: bridge
